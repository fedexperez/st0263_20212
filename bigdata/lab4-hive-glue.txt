ST0263 TÓPICOS ESPECIALES EN TELEMÁTICA, 2021-2

LAB 4 - Hive SQL y AWS Glue/Athena

1. basado en los datos más recientes de covid19 en Colombia, sobre los cuales uds en lab3 contestaron 5 preguntas de negocio con procesamiento en Dataframes,
 ahora en este lab4, uds contestarán las mismas preguntas PERO en SQL en los siguientes ambientes:

1.1. AWS EMR / Hue / Con tablas EXTERNAS HIVE con datos en S3 (HIVE: debe crear la tabla y responder las 
preguntas de negocio) - nombre tabla = 'covid1'
1.2. AWS EMR Zeppelin / usando la tabla creada en 1.1, Reponde las preguntas de negocio en SQL (%sql) y SparkSQL (%spark.pyspark con el objeto sparl.sql("Select ..."))
use como ejemplo el notebook: spark-onu-zeppelin.json)
1.3. AWS Glue - Catalogue los datos de covid en S3 y generar una tabla SQL para ser consultadas en AWS Athena y EMR/Hive o SparkSQL
1.4. AWS Athena - Para consultar datos en SQL de AWS Glue o EMR/Hime

## 2. Preguntas de negocio (Responder en SQL):

   2.1 Los 10 departamentos con más casos de covid en Colombia ordenados de mayor a menor.
   2.2 Las 10 ciudades con más casos de covid en Colombia ordenados de mayor a menor.
   2.3 Los 10 días con más casos de covid en Colombia ordenados de mayor a menor.
   2.4 Distribución de casos por edades de covid en Colombia.
   2.5 Realice la pregunda de negocio que quiera sobre los datos y respondala con la correspondiente programación en SQL.

 ## Creación de tabla covid colombia con datos recientes (+800 MB):

### en EMR / Hive / S3: (tabla externa)

CREATE EXTERNAL TABLE `tablecovid2`(
  `fecha reporte web` string, 
  `id de caso` bigint, 
  `fecha de notificación` string, 
  `código divipola departamento` bigint, 
  `nombre departamento` string, 
  `código divipola municipio` bigint, 
  `nombre municipio` string, 
  `edad` bigint, 
  `unidad de medida de edad` bigint, 
  `sexo` string, 
  `tipo de contagio` string, 
  `ubicación del caso` string, 
  `estado` string, 
  `código iso del país` bigint, 
  `nombre del país` string, 
  `recuperado` string, 
  `fecha de inicio de síntomas` string, 
  `fecha de muerte` string, 
  `fecha de diagnóstico` string, 
  `fecha de recuperación` string, 
  `tipo de recuperación` string, 
  `pertenencia étnica` bigint, 
  `nombre del grupo étnico` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY ',' 
STORED AS TEXTFILE 
LOCATION
  's3://st0263datasets/tablecovid/'

### en EMR / Hive / HDFS: (tabla manejada)

CREATE TABLE `tablecovid3`(
  `fecha reporte web` string, 
  `id de caso` bigint, 
  `fecha de notificación` string, 
  `código divipola departamento` bigint, 
  `nombre departamento` string, 
  `código divipola municipio` bigint, 
  `nombre municipio` string, 
  `edad` bigint, 
  `unidad de medida de edad` bigint, 
  `sexo` string, 
  `tipo de contagio` string, 
  `ubicación del caso` string, 
  `estado` string, 
  `código iso del país` bigint, 
  `nombre del país` string, 
  `recuperado` string, 
  `fecha de inicio de síntomas` string, 
  `fecha de muerte` string, 
  `fecha de diagnóstico` string, 
  `fecha de recuperación` string, 
  `tipo de recuperación` string, 
  `pertenencia étnica` bigint, 
  `nombre del grupo étnico` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY ',' 
STORED AS TEXTFILE

ENTREGABLES:

Cada alumno enviará al profesor:

    *  El notebook .ipynb Y el zeppellin donde desarrolla los numerales 2.x

      Documento .txt o docx donde coloca TODOS los scripts SQL utilizados y registra las líneas de salida de cada comando SQL.

      La URI del S3 donde están los datos de salida del numeral 2.x